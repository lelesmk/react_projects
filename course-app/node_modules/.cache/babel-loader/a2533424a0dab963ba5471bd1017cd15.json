{"ast":null,"code":"var _jsxFileName = \"/Users/LelethuMkefa/dev/js-course/react-flux-app/src/components/CourseForm.js\";\nimport React from \"react\"; // consume reusable TextInput component\n\nimport TextInput from \"../shared/TextInput\"; // import PropTypes\n\nimport PropTypes from \"prop-types\";\nimport authorStore from \"../stores/authorStore\";\n\nfunction CourseForm(props) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    id: \"title\",\n    label: \"Title\",\n    onChange: props.onChange,\n    name: \"title\",\n    value: props.course.title,\n    error: props.errors.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Author\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"selectAuthor\",\n    name: \"authorId\",\n    onChange: props.onChange\n    /** value for select cannot be null so\n     *  - set value to empty string if authorId\n     *    is not selected. */\n    // value={props.course.authorId || \"\"}\n    ,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, () => {\n    let select = document.getElementById(\"selectAuthor\");\n    let authorValues = authorStore.getAuthors().forEach(author => Object.values(author));\n    let authorKeys = authorStore.getAuthors().forEach(author => Object.keys(author));\n\n    for (let i = 0; i < authorValues.length; i++) {\n      let opt = authorValues[i];\n      let val = authorKeys[i];\n      let element = document.createElement(\"option\");\n      element.textContent = opt;\n      element.value = val;\n      select.appendChild(element);\n    }\n  })), props.errors.authorId && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, props.errors.authorId)), /*#__PURE__*/React.createElement(TextInput, {\n    id: \"category\",\n    label: \"Category\",\n    name: \"category\",\n    onChange: props.onChange,\n    value: props.course.category,\n    error: props.errors.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Save\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n} // declare PropTypes\n\n\nCourseForm.propTypes = {\n  course: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\nexport default CourseForm;","map":{"version":3,"sources":["/Users/LelethuMkefa/dev/js-course/react-flux-app/src/components/CourseForm.js"],"names":["React","TextInput","PropTypes","authorStore","CourseForm","props","onSubmit","onChange","course","title","errors","select","document","getElementById","authorValues","getAuthors","forEach","author","Object","values","authorKeys","keys","i","length","opt","val","element","createElement","textContent","value","appendChild","authorId","category","propTypes","object","func","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// consume reusable TextInput component\nimport TextInput from \"../shared/TextInput\";\n\n// import PropTypes\nimport PropTypes from \"prop-types\";\nimport authorStore from \"../stores/authorStore\";\n\nfunction CourseForm(props) {\n  return (\n    <form onSubmit={props.onSubmit}>\n      {/** insert onSubmit on form tag rather than the\n       *   submit button for better accessibility. User\n       *   can click Save button or hit Enter to submit. */}\n      <TextInput\n        id=\"title\"\n        label=\"Title\"\n        onChange={props.onChange}\n        name=\"title\"\n        value={props.course.title}\n        error={props.errors.title}\n      />\n      <div className=\"form-group\">\n        <label htmlFor=\"author\">Author</label>\n        <div className=\"field\">\n          <select\n            id=\"selectAuthor\"\n            name=\"authorId\"\n            onChange={props.onChange}\n            /** value for select cannot be null so\n             *  - set value to empty string if authorId\n             *    is not selected. */\n            // value={props.course.authorId || \"\"}\n            className=\"form-control\"\n          >\n            {() => {\n              let select = document.getElementById(\"selectAuthor\");\n              let authorValues = authorStore\n                .getAuthors()\n                .forEach((author) => Object.values(author));\n              let authorKeys = authorStore\n                .getAuthors()\n                .forEach((author) => Object.keys(author));\n\n              for (let i = 0; i < authorValues.length; i++) {\n                let opt = authorValues[i];\n                let val = authorKeys[i];\n                let element = document.createElement(\"option\");\n                element.textContent = opt;\n                element.value = val;\n                select.appendChild(element);\n              }\n            }}\n          </select>\n        </div>\n        {/** reuasable component SelectInput not setup for this form group\n         *   as we did for TextInput so we need to display the error manually.\n         */}\n        {props.errors.authorId && (\n          <div className=\"alert alert-danger\">{props.errors.authorId}</div>\n        )}\n      </div>\n\n      <TextInput\n        id=\"category\"\n        label=\"Category\"\n        name=\"category\"\n        onChange={props.onChange}\n        value={props.course.category}\n        error={props.errors.category}\n      />\n\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n    </form>\n  );\n}\n\n// declare PropTypes\nCourseForm.propTypes = {\n  course: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nexport default CourseForm;\n"]},"metadata":{},"sourceType":"module"}