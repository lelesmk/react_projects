{"ast":null,"code":"import React from\"react\";import{Link}from\"react-router-dom\";function CourseList(props){return/*#__PURE__*/React.createElement(\"table\",{className:\"table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Title\"),/*#__PURE__*/React.createElement(\"th\",null,\"Author\"),/*#__PURE__*/React.createElement(\"th\",null,\"Category\"),/*#__PURE__*/React.createElement(\"th\",null,\"\\xA0\"))),/*#__PURE__*/React.createElement(\"tbody\",null,props.courses.map(function(course){return/*#__PURE__*/ /** - for each course return a table row array.\n             *  - assign a unique key to child in array so\n             *  React can track each element when we create\n             *  multiple instances of an element in the array\n             *  using React components. Now when we add or remove\n             *  different elements (row is an element) React\n             *  can maintain proper state so the order of\n             *  these element doesn't get destroyed when we\n             *  re-render the application.\n             */React.createElement(\"tr\",{key:course.id},/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Link,{to:\"/course/\"+course.slug},course.title)),/*#__PURE__*/React.createElement(\"td\",null,props.getAuthorName(course.authorId-1,props.authors)),/*#__PURE__*/React.createElement(\"td\",null,course.category),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-outline-danger\",onClick:function onClick(){return props.deleteCourse(course.id);}},\"Delete\")));})));}export default CourseList;","map":{"version":3,"sources":["/Users/LelethuMkefa/dev/js-course/course-app/src/components/CourseList.js"],"names":["React","Link","CourseList","props","courses","map","course","id","slug","title","getAuthorName","authorId","authors","category","deleteCourse"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,IAAT,KAAqB,kBAArB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACzB,mBACE,6BAAO,SAAS,CAAC,OAAjB,eACE,8CACE,2CACE,sCADF,cAEE,uCAFF,cAGE,yCAHF,cAIE,qCAJF,CADF,CADF,cASE,iCAIGA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB,SAACC,MAAD,CAAY,CAC7B,oBACE;;;;;;;;;eAUA,0BAAI,GAAG,CAAEA,MAAM,CAACC,EAAhB,eACE,2CACE,oBAAC,IAAD,EAAM,EAAE,CAAE,WAAaD,MAAM,CAACE,IAA9B,EAAqCF,MAAM,CAACG,KAA5C,CADF,CADF,cAIE,8BAAKN,KAAK,CAACO,aAAN,CAAoBJ,MAAM,CAACK,QAAP,CAAkB,CAAtC,CAAyCR,KAAK,CAACS,OAA/C,CAAL,CAJF,cAKE,8BAAKN,MAAM,CAACO,QAAZ,CALF,cAME,2CACE,8BACE,SAAS,CAAC,wBADZ,CAEE,OAAO,CAAE,yBAAMV,CAAAA,KAAK,CAACW,YAAN,CAAmBR,MAAM,CAACC,EAA1B,CAAN,EAFX,WADF,CANF,CAXF,CA2BD,CA5BA,CAJH,CATF,CADF,CA8CD,CAED,cAAeL,CAAAA,UAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction CourseList(props) {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Author</th>\n          <th>Category</th>\n          <th>&nbsp;</th>\n        </tr>\n      </thead>\n      <tbody>\n        {/** - iterate this courses passed in via props and\n         *   - call map on that array of courses.\n         *   - map returns an array. */}\n        {props.courses.map((course) => {\n          return (\n            /** - for each course return a table row array.\n             *  - assign a unique key to child in array so\n             *  React can track each element when we create\n             *  multiple instances of an element in the array\n             *  using React components. Now when we add or remove\n             *  different elements (row is an element) React\n             *  can maintain proper state so the order of\n             *  these element doesn't get destroyed when we\n             *  re-render the application.\n             */\n            <tr key={course.id}>\n              <td>\n                <Link to={\"/course/\" + course.slug}>{course.title}</Link>\n              </td>\n              <td>{props.getAuthorName(course.authorId - 1, props.authors)}</td>\n              <td>{course.category}</td>\n              <td>\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={() => props.deleteCourse(course.id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default CourseList;\n\nCourseList.propTypes = {\n  // delete course\n  deleteCourse: PropTypes.func.isRequired,\n  // courses\n  courses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      authorId: PropTypes.number.isRequired,\n      category: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}