{"ast":null,"code":"\"use strict\";\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst express = require('express');\n\nconst _ = require('lodash');\n\nconst pluralize = require('pluralize');\n\nconst write = require('./write');\n\nconst getFullURL = require('./get-full-url');\n\nconst utils = require('../utils');\n\nconst delay = require('./delay');\n\nmodule.exports = (db, name, opts) => {\n  // Create router\n  const router = express.Router();\n  router.use(delay); // Embed function used in GET /name and GET /name/id\n\n  function embed(resource, e) {\n    e && [].concat(e).forEach(externalResource => {\n      if (db.get(externalResource).value) {\n        const query = {};\n        const singularResource = pluralize.singular(name);\n        query[`${singularResource}${opts.foreignKeySuffix}`] = resource.id;\n        resource[externalResource] = db.get(externalResource).filter(query).value();\n      }\n    });\n  } // Expand function used in GET /name and GET /name/id\n\n\n  function expand(resource, e) {\n    e && [].concat(e).forEach(innerResource => {\n      const plural = pluralize(innerResource);\n\n      if (db.get(plural).value()) {\n        const prop = `${innerResource}${opts.foreignKeySuffix}`;\n        resource[innerResource] = db.get(plural).getById(resource[prop]).value();\n      }\n    });\n  } // GET /name\n  // GET /name?q=\n  // GET /name?attr=&attr=\n  // GET /name?_end=&\n  // GET /name?_start=&_end=&\n  // GET /name?_embed=&_expand=\n\n\n  function list(req, res, next) {\n    // Resource chain\n    let chain = db.get(name); // Remove q, _start, _end, ... from req.query to avoid filtering using those\n    // parameters\n\n    let q = req.query.q;\n    let _start = req.query._start;\n    let _end = req.query._end;\n    let _page = req.query._page;\n    let _sort = req.query._sort;\n    let _order = req.query._order;\n    let _limit = req.query._limit;\n    let _embed = req.query._embed;\n    let _expand = req.query._expand;\n    delete req.query.q;\n    delete req.query._start;\n    delete req.query._end;\n    delete req.query._sort;\n    delete req.query._order;\n    delete req.query._limit;\n    delete req.query._embed;\n    delete req.query._expand; // Automatically delete query parameters that can't be found\n    // in the database\n\n    Object.keys(req.query).forEach(query => {\n      const arr = db.get(name).value();\n\n      for (let i in arr) {\n        if (_.has(arr[i], query) || query === 'callback' || query === '_' || /_lte$/.test(query) || /_gte$/.test(query) || /_ne$/.test(query) || /_like$/.test(query)) return;\n      }\n\n      delete req.query[query];\n    });\n\n    if (q) {\n      // Full-text search\n      if (Array.isArray(q)) {\n        q = q[0];\n      }\n\n      q = q.toLowerCase();\n      chain = chain.filter(obj => {\n        for (let key in obj) {\n          const value = obj[key];\n\n          if (db._.deepQuery(value, q)) {\n            return true;\n          }\n        }\n      });\n    }\n\n    Object.keys(req.query).forEach(key => {\n      // Don't take into account JSONP query parameters\n      // jQuery adds a '_' query parameter too\n      if (key !== 'callback' && key !== '_') {\n        // Always use an array, in case req.query is an array\n        const arr = [].concat(req.query[key]);\n        chain = chain.filter(element => {\n          return arr.map(function (value) {\n            const isDifferent = /_ne$/.test(key);\n            const isRange = /_lte$/.test(key) || /_gte$/.test(key);\n            const isLike = /_like$/.test(key);\n            const path = key.replace(/(_lte|_gte|_ne|_like)$/, ''); // get item value based on path\n            // i.e post.title -> 'foo'\n\n            const elementValue = _.get(element, path); // Prevent toString() failing on undefined or null values\n\n\n            if (elementValue === undefined || elementValue === null) {\n              return;\n            }\n\n            if (isRange) {\n              const isLowerThan = /_gte$/.test(key);\n              return isLowerThan ? value <= elementValue : value >= elementValue;\n            } else if (isDifferent) {\n              return value !== elementValue.toString();\n            } else if (isLike) {\n              return new RegExp(value, 'i').test(elementValue.toString());\n            } else {\n              return value === elementValue.toString();\n            }\n          }).reduce((a, b) => a || b);\n        });\n      }\n    }); // Sort\n\n    if (_sort) {\n      const _sortSet = _sort.split(',');\n\n      const _orderSet = (_order || '').split(',').map(s => s.toLowerCase());\n\n      chain = chain.orderBy(_sortSet, _orderSet);\n    } // Slice result\n\n\n    if (_end || _limit || _page) {\n      res.setHeader('X-Total-Count', chain.size());\n      res.setHeader('Access-Control-Expose-Headers', `X-Total-Count${_page ? ', Link' : ''}`);\n    }\n\n    if (_page) {\n      _page = parseInt(_page, 10);\n      _page = _page >= 1 ? _page : 1;\n      _limit = parseInt(_limit, 10) || 10;\n      const page = utils.getPage(chain.value(), _page, _limit);\n      const links = {};\n      const fullURL = getFullURL(req);\n\n      if (page.first) {\n        links.first = fullURL.replace(`page=${page.current}`, `page=${page.first}`);\n      }\n\n      if (page.prev) {\n        links.prev = fullURL.replace(`page=${page.current}`, `page=${page.prev}`);\n      }\n\n      if (page.next) {\n        links.next = fullURL.replace(`page=${page.current}`, `page=${page.next}`);\n      }\n\n      if (page.last) {\n        links.last = fullURL.replace(`page=${page.current}`, `page=${page.last}`);\n      }\n\n      res.links(links);\n      chain = _.chain(page.items);\n    } else if (_end) {\n      _start = parseInt(_start, 10) || 0;\n      _end = parseInt(_end, 10);\n      chain = chain.slice(_start, _end);\n    } else if (_limit) {\n      _start = parseInt(_start, 10) || 0;\n      _limit = parseInt(_limit, 10);\n      chain = chain.slice(_start, _start + _limit);\n    } // embed and expand\n\n\n    chain = chain.cloneDeep().forEach(function (element) {\n      embed(element, _embed);\n      expand(element, _expand);\n    });\n    res.locals.data = chain.value();\n    next();\n  } // GET /name/:id\n  // GET /name/:id?_embed=&_expand\n\n\n  function show(req, res, next) {\n    const _embed = req.query._embed;\n    const _expand = req.query._expand;\n    const resource = db.get(name).getById(req.params.id).value();\n\n    if (resource) {\n      // Clone resource to avoid making changes to the underlying object\n      const clone = _.cloneDeep(resource); // Embed other resources based on resource id\n      // /posts/1?_embed=comments\n\n\n      embed(clone, _embed); // Expand inner resources based on id\n      // /posts/1?_expand=user\n\n      expand(clone, _expand);\n      res.locals.data = clone;\n    }\n\n    next();\n  } // POST /name\n\n\n  function create(req, res, next) {\n    let resource;\n\n    if (opts._isFake) {\n      const id = db.get(name).createId().value();\n      resource = _objectSpread({}, req.body, {\n        id\n      });\n    } else {\n      resource = db.get(name).insert(req.body).value();\n    }\n\n    res.setHeader('Access-Control-Expose-Headers', 'Location');\n    res.location(`${getFullURL(req)}/${resource.id}`);\n    res.status(201);\n    res.locals.data = resource;\n    next();\n  } // PUT /name/:id\n  // PATCH /name/:id\n\n\n  function update(req, res, next) {\n    const id = req.params.id;\n    let resource;\n\n    if (opts._isFake) {\n      resource = db.get(name).getById(id).value();\n\n      if (req.method === 'PATCH') {\n        resource = _objectSpread({}, resource, req.body);\n      } else {\n        resource = _objectSpread({}, req.body, {\n          id: resource.id\n        });\n      }\n    } else {\n      let chain = db.get(name);\n      chain = req.method === 'PATCH' ? chain.updateById(id, req.body) : chain.replaceById(id, req.body);\n      resource = chain.value();\n    }\n\n    if (resource) {\n      res.locals.data = resource;\n    }\n\n    next();\n  } // DELETE /name/:id\n\n\n  function destroy(req, res, next) {\n    let resource;\n\n    if (opts._isFake) {\n      resource = db.get(name).value();\n    } else {\n      resource = db.get(name).removeById(req.params.id).value(); // Remove dependents documents\n\n      const removable = db._.getRemovable(db.getState(), opts);\n\n      removable.forEach(item => {\n        db.get(item.name).removeById(item.id).value();\n      });\n    }\n\n    if (resource) {\n      res.locals.data = {};\n    }\n\n    next();\n  }\n\n  const w = write(db);\n  router.route('/').get(list).post(create, w);\n  router.route('/:id').get(show).put(update, w).patch(update, w).delete(destroy, w);\n  return router;\n};","map":{"version":3,"sources":["/Users/LelethuMkefa/dev/js-course/react-flux-app/node_modules/json-server/lib/server/router/plural.js"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","express","require","_","pluralize","write","getFullURL","utils","delay","module","exports","db","name","opts","router","Router","use","embed","resource","e","externalResource","get","query","singularResource","singular","foreignKeySuffix","id","expand","innerResource","plural","prop","getById","list","req","res","next","chain","q","_start","_end","_page","_sort","_order","_limit","_embed","_expand","arr","has","test","Array","isArray","toLowerCase","deepQuery","element","map","isDifferent","isRange","isLike","path","replace","elementValue","undefined","isLowerThan","toString","RegExp","reduce","a","b","_sortSet","split","_orderSet","s","orderBy","setHeader","size","parseInt","page","getPage","links","fullURL","first","current","prev","last","items","slice","cloneDeep","locals","data","show","params","clone","create","_isFake","createId","body","insert","location","status","update","method","updateById","replaceById","destroy","removeById","removable","getRemovable","getState","item","w","route","post","put","patch","delete"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst express = require('express');\n\nconst _ = require('lodash');\n\nconst pluralize = require('pluralize');\n\nconst write = require('./write');\n\nconst getFullURL = require('./get-full-url');\n\nconst utils = require('../utils');\n\nconst delay = require('./delay');\n\nmodule.exports = (db, name, opts) => {\n  // Create router\n  const router = express.Router();\n  router.use(delay); // Embed function used in GET /name and GET /name/id\n\n  function embed(resource, e) {\n    e && [].concat(e).forEach(externalResource => {\n      if (db.get(externalResource).value) {\n        const query = {};\n        const singularResource = pluralize.singular(name);\n        query[`${singularResource}${opts.foreignKeySuffix}`] = resource.id;\n        resource[externalResource] = db.get(externalResource).filter(query).value();\n      }\n    });\n  } // Expand function used in GET /name and GET /name/id\n\n\n  function expand(resource, e) {\n    e && [].concat(e).forEach(innerResource => {\n      const plural = pluralize(innerResource);\n\n      if (db.get(plural).value()) {\n        const prop = `${innerResource}${opts.foreignKeySuffix}`;\n        resource[innerResource] = db.get(plural).getById(resource[prop]).value();\n      }\n    });\n  } // GET /name\n  // GET /name?q=\n  // GET /name?attr=&attr=\n  // GET /name?_end=&\n  // GET /name?_start=&_end=&\n  // GET /name?_embed=&_expand=\n\n\n  function list(req, res, next) {\n    // Resource chain\n    let chain = db.get(name); // Remove q, _start, _end, ... from req.query to avoid filtering using those\n    // parameters\n\n    let q = req.query.q;\n    let _start = req.query._start;\n    let _end = req.query._end;\n    let _page = req.query._page;\n    let _sort = req.query._sort;\n    let _order = req.query._order;\n    let _limit = req.query._limit;\n    let _embed = req.query._embed;\n    let _expand = req.query._expand;\n    delete req.query.q;\n    delete req.query._start;\n    delete req.query._end;\n    delete req.query._sort;\n    delete req.query._order;\n    delete req.query._limit;\n    delete req.query._embed;\n    delete req.query._expand; // Automatically delete query parameters that can't be found\n    // in the database\n\n    Object.keys(req.query).forEach(query => {\n      const arr = db.get(name).value();\n\n      for (let i in arr) {\n        if (_.has(arr[i], query) || query === 'callback' || query === '_' || /_lte$/.test(query) || /_gte$/.test(query) || /_ne$/.test(query) || /_like$/.test(query)) return;\n      }\n\n      delete req.query[query];\n    });\n\n    if (q) {\n      // Full-text search\n      if (Array.isArray(q)) {\n        q = q[0];\n      }\n\n      q = q.toLowerCase();\n      chain = chain.filter(obj => {\n        for (let key in obj) {\n          const value = obj[key];\n\n          if (db._.deepQuery(value, q)) {\n            return true;\n          }\n        }\n      });\n    }\n\n    Object.keys(req.query).forEach(key => {\n      // Don't take into account JSONP query parameters\n      // jQuery adds a '_' query parameter too\n      if (key !== 'callback' && key !== '_') {\n        // Always use an array, in case req.query is an array\n        const arr = [].concat(req.query[key]);\n        chain = chain.filter(element => {\n          return arr.map(function (value) {\n            const isDifferent = /_ne$/.test(key);\n            const isRange = /_lte$/.test(key) || /_gte$/.test(key);\n            const isLike = /_like$/.test(key);\n            const path = key.replace(/(_lte|_gte|_ne|_like)$/, ''); // get item value based on path\n            // i.e post.title -> 'foo'\n\n            const elementValue = _.get(element, path); // Prevent toString() failing on undefined or null values\n\n\n            if (elementValue === undefined || elementValue === null) {\n              return;\n            }\n\n            if (isRange) {\n              const isLowerThan = /_gte$/.test(key);\n              return isLowerThan ? value <= elementValue : value >= elementValue;\n            } else if (isDifferent) {\n              return value !== elementValue.toString();\n            } else if (isLike) {\n              return new RegExp(value, 'i').test(elementValue.toString());\n            } else {\n              return value === elementValue.toString();\n            }\n          }).reduce((a, b) => a || b);\n        });\n      }\n    }); // Sort\n\n    if (_sort) {\n      const _sortSet = _sort.split(',');\n\n      const _orderSet = (_order || '').split(',').map(s => s.toLowerCase());\n\n      chain = chain.orderBy(_sortSet, _orderSet);\n    } // Slice result\n\n\n    if (_end || _limit || _page) {\n      res.setHeader('X-Total-Count', chain.size());\n      res.setHeader('Access-Control-Expose-Headers', `X-Total-Count${_page ? ', Link' : ''}`);\n    }\n\n    if (_page) {\n      _page = parseInt(_page, 10);\n      _page = _page >= 1 ? _page : 1;\n      _limit = parseInt(_limit, 10) || 10;\n      const page = utils.getPage(chain.value(), _page, _limit);\n      const links = {};\n      const fullURL = getFullURL(req);\n\n      if (page.first) {\n        links.first = fullURL.replace(`page=${page.current}`, `page=${page.first}`);\n      }\n\n      if (page.prev) {\n        links.prev = fullURL.replace(`page=${page.current}`, `page=${page.prev}`);\n      }\n\n      if (page.next) {\n        links.next = fullURL.replace(`page=${page.current}`, `page=${page.next}`);\n      }\n\n      if (page.last) {\n        links.last = fullURL.replace(`page=${page.current}`, `page=${page.last}`);\n      }\n\n      res.links(links);\n      chain = _.chain(page.items);\n    } else if (_end) {\n      _start = parseInt(_start, 10) || 0;\n      _end = parseInt(_end, 10);\n      chain = chain.slice(_start, _end);\n    } else if (_limit) {\n      _start = parseInt(_start, 10) || 0;\n      _limit = parseInt(_limit, 10);\n      chain = chain.slice(_start, _start + _limit);\n    } // embed and expand\n\n\n    chain = chain.cloneDeep().forEach(function (element) {\n      embed(element, _embed);\n      expand(element, _expand);\n    });\n    res.locals.data = chain.value();\n    next();\n  } // GET /name/:id\n  // GET /name/:id?_embed=&_expand\n\n\n  function show(req, res, next) {\n    const _embed = req.query._embed;\n    const _expand = req.query._expand;\n    const resource = db.get(name).getById(req.params.id).value();\n\n    if (resource) {\n      // Clone resource to avoid making changes to the underlying object\n      const clone = _.cloneDeep(resource); // Embed other resources based on resource id\n      // /posts/1?_embed=comments\n\n\n      embed(clone, _embed); // Expand inner resources based on id\n      // /posts/1?_expand=user\n\n      expand(clone, _expand);\n      res.locals.data = clone;\n    }\n\n    next();\n  } // POST /name\n\n\n  function create(req, res, next) {\n    let resource;\n\n    if (opts._isFake) {\n      const id = db.get(name).createId().value();\n      resource = _objectSpread({}, req.body, {\n        id\n      });\n    } else {\n      resource = db.get(name).insert(req.body).value();\n    }\n\n    res.setHeader('Access-Control-Expose-Headers', 'Location');\n    res.location(`${getFullURL(req)}/${resource.id}`);\n    res.status(201);\n    res.locals.data = resource;\n    next();\n  } // PUT /name/:id\n  // PATCH /name/:id\n\n\n  function update(req, res, next) {\n    const id = req.params.id;\n    let resource;\n\n    if (opts._isFake) {\n      resource = db.get(name).getById(id).value();\n\n      if (req.method === 'PATCH') {\n        resource = _objectSpread({}, resource, req.body);\n      } else {\n        resource = _objectSpread({}, req.body, {\n          id: resource.id\n        });\n      }\n    } else {\n      let chain = db.get(name);\n      chain = req.method === 'PATCH' ? chain.updateById(id, req.body) : chain.replaceById(id, req.body);\n      resource = chain.value();\n    }\n\n    if (resource) {\n      res.locals.data = resource;\n    }\n\n    next();\n  } // DELETE /name/:id\n\n\n  function destroy(req, res, next) {\n    let resource;\n\n    if (opts._isFake) {\n      resource = db.get(name).value();\n    } else {\n      resource = db.get(name).removeById(req.params.id).value(); // Remove dependents documents\n\n      const removable = db._.getRemovable(db.getState(), opts);\n\n      removable.forEach(item => {\n        db.get(item.name).removeById(item.id).value();\n      });\n    }\n\n    if (resource) {\n      res.locals.data = {};\n    }\n\n    next();\n  }\n\n  const w = write(db);\n  router.route('/').get(list).post(create, w);\n  router.route('/:id').get(show).put(update, w).patch(update, w).delete(destroy, w);\n  return router;\n};"]},"metadata":{},"sourceType":"script"}