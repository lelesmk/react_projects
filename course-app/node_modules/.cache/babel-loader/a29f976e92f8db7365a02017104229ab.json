{"ast":null,"code":"import React from\"react\";import{Link}from\"react-router-dom\";function AuthorsList(props){return/*#__PURE__*/React.createElement(\"table\",{className:\"table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Author\"),/*#__PURE__*/React.createElement(\"th\",null,\"Admin Panel\"),/*#__PURE__*/React.createElement(\"th\",null,\"\\xA0\"))),/*#__PURE__*/React.createElement(\"tbody\",null,props.authors.map(function(author){return/*#__PURE__*/ /** - for each course return a table row array.\n             *  - assign a unique key to child in array so\n             *  React can track each element when we create\n             *  multiple instances of an element in the array\n             *  using React components. Now when we add or remove\n             *  different elements (row is an element) React\n             *  can maintain proper state so the order of\n             *  these element doesn't get destroyed when we\n             *  re-render the application.\n             */React.createElement(\"tr\",{key:author.id},/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Link,{to:\"/author/\"+author.id},props.getAuthorName(author.id-1,props.authors))),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Link,{to:\"/author/\"+author.id,className:\"btn btn-outline-warning\"},\"Edit\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-outline-danger\",onClick:function onClick(){return props.deleteAuthor(author.id);}},\"Delete\")));})));}export default AuthorsList;","map":{"version":3,"sources":["/Users/LelethuMkefa/dev/js-course/course-app/src/components/AuthorsList.js"],"names":["React","Link","AuthorsList","props","authors","map","author","id","getAuthorName","deleteAuthor"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,IAAT,KAAqB,kBAArB,CAEA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CAC1B,mBACE,6BAAO,SAAS,CAAC,OAAjB,eACE,8CACE,2CACE,uCADF,cAEE,4CAFF,cAGE,qCAHF,CADF,CADF,cAQE,iCAIGA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB,SAACC,MAAD,CAAY,CAC7B,oBACE;;;;;;;;;eAUA,0BAAI,GAAG,CAAEA,MAAM,CAACC,EAAhB,eACE,2CACE,oBAAC,IAAD,EAAM,EAAE,CAAE,WAAaD,MAAM,CAACC,EAA9B,EACGJ,KAAK,CAACK,aAAN,CAAoBF,MAAM,CAACC,EAAP,CAAY,CAAhC,CAAmCJ,KAAK,CAACC,OAAzC,CADH,CADF,CADF,cAME,2CACE,oBAAC,IAAD,EACE,EAAE,CAAE,WAAaE,MAAM,CAACC,EAD1B,CAEE,SAAS,CAAC,yBAFZ,SADF,CANF,cAcE,2CACE,8BACE,SAAS,CAAC,wBADZ,CAEE,OAAO,CAAE,yBAAMJ,CAAAA,KAAK,CAACM,YAAN,CAAmBH,MAAM,CAACC,EAA1B,CAAN,EAFX,WADF,CAdF,CAXF,CAmCD,CApCA,CAJH,CARF,CADF,CAqDD,CAED,cAAeL,CAAAA,WAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction AuthorsList(props) {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Author</th>\n          <th>Admin Panel</th>\n          <th>&nbsp;</th>\n        </tr>\n      </thead>\n      <tbody>\n        {/** - iterate this courses passed in via props and\n         *   - call map on that array of courses.\n         *   - map returns an array. */}\n        {props.authors.map((author) => {\n          return (\n            /** - for each course return a table row array.\n             *  - assign a unique key to child in array so\n             *  React can track each element when we create\n             *  multiple instances of an element in the array\n             *  using React components. Now when we add or remove\n             *  different elements (row is an element) React\n             *  can maintain proper state so the order of\n             *  these element doesn't get destroyed when we\n             *  re-render the application.\n             */\n            <tr key={author.id}>\n              <td>\n                <Link to={\"/author/\" + author.id}>\n                  {props.getAuthorName(author.id - 1, props.authors)}\n                </Link>\n              </td>\n              <td>\n                <Link\n                  to={\"/author/\" + author.id}\n                  className=\"btn btn-outline-warning\"\n                >\n                  Edit\n                </Link>\n              </td>\n              <td>\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={() => props.deleteAuthor(author.id)}\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default AuthorsList;\n\nAuthorsList.propTypes = {\n  // delete course\n  deleteAuthor: PropTypes.func.isRequired,\n  // courses\n  author: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}