{"ast":null,"code":"import _slicedToArray from\"/Users/LelethuMkefa/dev/js-course/course-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";// import function to call from mock api\nimport authorStore from\"../stores/authorStore\";import{loadAuthors,deleteAuthor}from\"../actions/authorActions\";// import logic into our page markup\nimport{Link}from\"react-router-dom\";import AuthorsList from\"../components/AuthorsList\";// FUNCTION COMPONENT WITH HOOKS\n/**======================================= */function AuthorsPage(){// declare state with useState hook\n/** - useState hook returns an array with two values\n   *   [ nameOfSate, nameOfSetterMethod ]\n   *  - initialise state with the authors held in authorStore\n   */var _useState=useState(authorStore.getAuthors()),_useState2=_slicedToArray(_useState,2),authors=_useState2[0],setAuthors=_useState2[1];useEffect(function(){authorStore.addChangeListener(onAuthorChange);// load authors state with array of authors\nif(authorStore.getAuthors().length===0){loadAuthors();}return function(){return authorStore.removeChangeListener(onAuthorChange);};},[]);function getAuthorName(courseAuthorId,authorsArray){console.log(\"searchAuthor() runs...\");for(var i=0;i<authorsArray.length;i++){console.log(\"authorsArray[i].name: \"+authorsArray[courseAuthorId].name);return authorsArray[courseAuthorId].name;}}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h2\",null,\"Authors\"),/*#__PURE__*/React.createElement(Link,{to:\"/author\",className:\"btn btn-primary\"},\"Add Author\"),/*#__PURE__*/React.createElement(AuthorsList,{authors:authors,deleteAuthor:deleteAuthor,getAuthorName:getAuthorName}));// execute function when a course is added to the store\nfunction onAuthorChange(){// request authors from store and add/set to this component state\nsetAuthors(authorStore.getAuthors());}}export default AuthorsPage;","map":{"version":3,"sources":["/Users/LelethuMkefa/dev/js-course/course-app/src/components/AuthorsPage.js"],"names":["React","useState","useEffect","authorStore","loadAuthors","deleteAuthor","Link","AuthorsList","AuthorsPage","getAuthors","authors","setAuthors","addChangeListener","onAuthorChange","length","removeChangeListener","getAuthorName","courseAuthorId","authorsArray","console","log","i","name"],"mappings":"+HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA;AACA,MAAOC,CAAAA,WAAP,KAAwB,uBAAxB,CAEA,OAASC,WAAT,CAAsBC,YAAtB,KAA0C,0BAA1C,CAEA;AACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CAEA;AACA,6CAEA,QAASC,CAAAA,WAAT,EAAuB,CACrB;AACA;;;KAFqB,cAMSP,QAAQ,CAACE,WAAW,CAACM,UAAZ,EAAD,CANjB,wCAMdC,OANc,eAMLC,UANK,eAQrBT,SAAS,CAAC,UAAM,CACdC,WAAW,CAACS,iBAAZ,CAA8BC,cAA9B,EAEA;AACA,GAAIV,WAAW,CAACM,UAAZ,GAAyBK,MAAzB,GAAoC,CAAxC,CAA2C,CACzCV,WAAW,GACZ,CAED,MAAO,kBAAMD,CAAAA,WAAW,CAACY,oBAAZ,CAAiCF,cAAjC,CAAN,EAAP,CACD,CATQ,CASN,EATM,CAAT,CAWA,QAASG,CAAAA,aAAT,CAAuBC,cAAvB,CAAuCC,YAAvC,CAAqD,CACnDC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,YAAY,CAACJ,MAAjC,CAAyCO,CAAC,EAA1C,CAA8C,CAC5CF,OAAO,CAACC,GAAR,CAAY,yBAA2BF,YAAY,CAACD,cAAD,CAAZ,CAA6BK,IAApE,EACA,MAAOJ,CAAAA,YAAY,CAACD,cAAD,CAAZ,CAA6BK,IAApC,CACD,CACF,CAED,mBACE,qDACE,wCADF,cAGE,oBAAC,IAAD,EAAM,EAAE,CAAC,SAAT,CAAmB,SAAS,CAAC,iBAA7B,eAHF,cAWE,oBAAC,WAAD,EACE,OAAO,CAAEZ,OADX,CAEE,YAAY,CAAEL,YAFhB,CAGE,aAAa,CAAEW,aAHjB,EAXF,CADF,CAoBA;AACA,QAASH,CAAAA,cAAT,EAA0B,CACxB;AACAF,UAAU,CAACR,WAAW,CAACM,UAAZ,EAAD,CAAV,CACD,CACF,CAED,cAAeD,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n// import function to call from mock api\nimport authorStore from \"../stores/authorStore\";\n\nimport { loadAuthors, deleteAuthor } from \"../actions/authorActions\";\n\n// import logic into our page markup\nimport { Link } from \"react-router-dom\";\n\nimport AuthorsList from \"../components/AuthorsList\";\n\n// FUNCTION COMPONENT WITH HOOKS\n/**======================================= */\n\nfunction AuthorsPage() {\n  // declare state with useState hook\n  /** - useState hook returns an array with two values\n   *   [ nameOfSate, nameOfSetterMethod ]\n   *  - initialise state with the authors held in authorStore\n   */\n  const [authors, setAuthors] = useState(authorStore.getAuthors());\n\n  useEffect(() => {\n    authorStore.addChangeListener(onAuthorChange);\n\n    // load authors state with array of authors\n    if (authorStore.getAuthors().length === 0) {\n      loadAuthors();\n    }\n\n    return () => authorStore.removeChangeListener(onAuthorChange);\n  }, []);\n\n  function getAuthorName(courseAuthorId, authorsArray) {\n    console.log(\"searchAuthor() runs...\");\n    for (let i = 0; i < authorsArray.length; i++) {\n      console.log(\"authorsArray[i].name: \" + authorsArray[courseAuthorId].name);\n      return authorsArray[courseAuthorId].name;\n    }\n  }\n\n  return (\n    <>\n      <h2>Authors</h2>\n      {/** - add course button to ManageCoursePage component */}\n      <Link to=\"/author\" className=\"btn btn-primary\">\n        Add Author\n      </Link>\n      {/** - call child component\n       *   - use props to pass courses array\n       *     from parent to child\n       *  (props are like html attributes for react components)\n       */}\n      <AuthorsList\n        authors={authors}\n        deleteAuthor={deleteAuthor}\n        getAuthorName={getAuthorName}\n      />\n    </>\n  );\n\n  // execute function when a course is added to the store\n  function onAuthorChange() {\n    // request authors from store and add/set to this component state\n    setAuthors(authorStore.getAuthors());\n  }\n}\n\nexport default AuthorsPage;\n"]},"metadata":{},"sourceType":"module"}