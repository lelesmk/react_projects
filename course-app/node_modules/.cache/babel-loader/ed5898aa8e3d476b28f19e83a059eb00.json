{"ast":null,"code":"var _jsxFileName = \"/Users/LelethuMkefa/dev/js-course/react-flux-app/src/components/ManageCoursePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport CourseForm from \"./CourseForm\";\nimport courseStore from \"../stores/courseStore\";\nimport { toast } from \"react-toastify\";\nimport * as courseActions from \"../actions/courseActions\";\n\nconst ManageCoursePage = props => {\n  const [errors, setErrors] = useState({});\n  const [courses, setCourses] = useState(courseStore.getCourses());\n  const [course, setCourse] = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    authorId: null,\n    category: \"\"\n  });\n  useEffect(() => {\n    courseStore.addChangeListener(onChange);\n    const slug = props.match.params.slug; // from the path `/courses/:slug`\n\n    if (courses.length === 0) {\n      courseActions.loadCourses();\n    } else if (slug) {\n      setCourse(courseStore.getCourseBySlug(slug));\n    }\n\n    return () => courseStore.removeChangeListener(onChange);\n  }, [courses.length, props.match.params.slug]);\n\n  function onChange() {\n    setCourses(courseStore.getCourses());\n  }\n\n  function handleChange({\n    target\n  }) {\n    setCourse({ ...course,\n      [target.name]: target.value\n    });\n  }\n\n  function formIsValid() {\n    const _errors = {};\n    if (!course.title) _errors.title = \"Title is required\";\n    if (!course.authorId) _errors.authorId = \"Author ID is required\";\n    if (!course.category) _errors.category = \"Category is required\";\n    setErrors(_errors); // Form is valid if the errors object has no properties\n\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid()) return;\n    courseActions.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Course saved.\");\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Manage Course\"), /*#__PURE__*/React.createElement(CourseForm, {\n    errors: errors,\n    course: course,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ManageCoursePage;","map":{"version":3,"sources":["/Users/LelethuMkefa/dev/js-course/react-flux-app/src/components/ManageCoursePage.js"],"names":["React","useState","useEffect","CourseForm","courseStore","toast","courseActions","ManageCoursePage","props","errors","setErrors","courses","setCourses","getCourses","course","setCourse","id","slug","title","authorId","category","addChangeListener","onChange","match","params","length","loadCourses","getCourseBySlug","removeChangeListener","handleChange","target","name","value","formIsValid","_errors","Object","keys","handleSubmit","event","preventDefault","saveCourse","then","history","push","success"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CourseForm from \"./CourseForm\";\nimport courseStore from \"../stores/courseStore\";\nimport { toast } from \"react-toastify\";\nimport * as courseActions from \"../actions/courseActions\";\n\nconst ManageCoursePage = (props) => {\n  const [errors, setErrors] = useState({});\n  const [courses, setCourses] = useState(courseStore.getCourses());\n  const [course, setCourse] = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    authorId: null,\n    category: \"\",\n  });\n\n  useEffect(() => {\n    courseStore.addChangeListener(onChange);\n    const slug = props.match.params.slug; // from the path `/courses/:slug`\n    if (courses.length === 0) {\n      courseActions.loadCourses();\n    } else if (slug) {\n      setCourse(courseStore.getCourseBySlug(slug));\n    }\n    return () => courseStore.removeChangeListener(onChange);\n  }, [courses.length, props.match.params.slug]);\n\n  function onChange() {\n    setCourses(courseStore.getCourses());\n  }\n\n  function handleChange({ target }) {\n    setCourse({\n      ...course,\n      [target.name]: target.value,\n    });\n  }\n\n  function formIsValid() {\n    const _errors = {};\n\n    if (!course.title) _errors.title = \"Title is required\";\n    if (!course.authorId) _errors.authorId = \"Author ID is required\";\n    if (!course.category) _errors.category = \"Category is required\";\n\n    setErrors(_errors);\n    // Form is valid if the errors object has no properties\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid()) return;\n    courseActions.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Course saved.\");\n    });\n  }\n\n  return (\n    <>\n      <h2>Manage Course</h2>\n      <CourseForm\n        errors={errors}\n        course={course}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n};\n\nexport default ManageCoursePage;\n"]},"metadata":{},"sourceType":"module"}