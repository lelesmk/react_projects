{"ast":null,"code":"var _jsxFileName = \"/Users/LelethuMkefa/dev/js-course/course-app/src/components/AuthorsPage.js\";\nimport React, { useState, useEffect } from \"react\"; // import function to call from mock api\n\nimport authorStore from \"../stores/authorStore\";\nimport { loadAuthors, deleteAuthor } from \"../actions/authorActions\"; // import logic into our page markup\n\nimport { Link } from \"react-router-dom\";\nimport AuthorsList from \"../components/AuthorsList\"; // FUNCTION COMPONENT WITH HOOKS\n\n/**======================================= */\n\nfunction AuthorsPage() {\n  // declare state with useState hook\n\n  /** - useState hook returns an array with two values\n   *   [ nameOfSate, nameOfSetterMethod ]\n   *  - initialise state with the authors held in authorStore\n   */\n  const [authors, setAuthors] = useState(authorStore.getAuthors());\n  useEffect(() => {\n    authorStore.addChangeListener(onAuthorChange); // load authors state with array of authors\n\n    if (authorStore.getAuthors().length === 0) {\n      loadAuthors();\n    }\n\n    return () => authorStore.removeChangeListener(onAuthorChange);\n  }, []);\n\n  function getAuthorName(courseAuthorId, authorsArray) {\n    console.log(\"searchAuthor() runs...\");\n\n    for (let i = 0; i < authorsArray.length; i++) {\n      console.log(\"authorsArray[i].name: \" + authorsArray[courseAuthorId].name);\n      return authorsArray[courseAuthorId].name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Authors\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/author\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Add Author\"), /*#__PURE__*/React.createElement(AuthorsList, {\n    authors: authors,\n    deleteAuthor: deleteAuthor,\n    getAuthorName: getAuthorName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  })); // execute function when a course is added to the store\n\n  function onAuthorChange() {\n    // request authors from store and add/set to this component state\n    setAuthors(authorStore.getAuthors());\n  }\n}\n\nexport default AuthorsPage;","map":{"version":3,"sources":["/Users/LelethuMkefa/dev/js-course/course-app/src/components/AuthorsPage.js"],"names":["React","useState","useEffect","authorStore","loadAuthors","deleteAuthor","Link","AuthorsList","AuthorsPage","authors","setAuthors","getAuthors","addChangeListener","onAuthorChange","length","removeChangeListener","getAuthorName","courseAuthorId","authorsArray","console","log","i","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,0BAA1C,C,CAEA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;;AACA;;AAEA,SAASC,WAAT,GAAuB;AACrB;;AACA;;;;AAIA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAACE,WAAW,CAACQ,UAAZ,EAAD,CAAtC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,WAAW,CAACS,iBAAZ,CAA8BC,cAA9B,EADc,CAGd;;AACA,QAAIV,WAAW,CAACQ,UAAZ,GAAyBG,MAAzB,KAAoC,CAAxC,EAA2C;AACzCV,MAAAA,WAAW;AACZ;;AAED,WAAO,MAAMD,WAAW,CAACY,oBAAZ,CAAiCF,cAAjC,CAAb;AACD,GATQ,EASN,EATM,CAAT;;AAWA,WAASG,aAAT,CAAuBC,cAAvB,EAAuCC,YAAvC,EAAqD;AACnDC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,YAAY,CAACJ,MAAjC,EAAyCO,CAAC,EAA1C,EAA8C;AAC5CF,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BF,YAAY,CAACD,cAAD,CAAZ,CAA6BK,IAApE;AACA,aAAOJ,YAAY,CAACD,cAAD,CAAZ,CAA6BK,IAApC;AACD;AACF;;AAED,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAGE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAmB,IAAA,SAAS,EAAC,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAWE,oBAAC,WAAD;AACE,IAAA,OAAO,EAAEb,OADX;AAEE,IAAA,YAAY,EAAEJ,YAFhB;AAGE,IAAA,aAAa,EAAEW,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,CA3BqB,CA+CrB;;AACA,WAASH,cAAT,GAA0B;AACxB;AACAH,IAAAA,UAAU,CAACP,WAAW,CAACQ,UAAZ,EAAD,CAAV;AACD;AACF;;AAED,eAAeH,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n// import function to call from mock api\nimport authorStore from \"../stores/authorStore\";\n\nimport { loadAuthors, deleteAuthor } from \"../actions/authorActions\";\n\n// import logic into our page markup\nimport { Link } from \"react-router-dom\";\n\nimport AuthorsList from \"../components/AuthorsList\";\n\n// FUNCTION COMPONENT WITH HOOKS\n/**======================================= */\n\nfunction AuthorsPage() {\n  // declare state with useState hook\n  /** - useState hook returns an array with two values\n   *   [ nameOfSate, nameOfSetterMethod ]\n   *  - initialise state with the authors held in authorStore\n   */\n  const [authors, setAuthors] = useState(authorStore.getAuthors());\n\n  useEffect(() => {\n    authorStore.addChangeListener(onAuthorChange);\n\n    // load authors state with array of authors\n    if (authorStore.getAuthors().length === 0) {\n      loadAuthors();\n    }\n\n    return () => authorStore.removeChangeListener(onAuthorChange);\n  }, []);\n\n  function getAuthorName(courseAuthorId, authorsArray) {\n    console.log(\"searchAuthor() runs...\");\n    for (let i = 0; i < authorsArray.length; i++) {\n      console.log(\"authorsArray[i].name: \" + authorsArray[courseAuthorId].name);\n      return authorsArray[courseAuthorId].name;\n    }\n  }\n\n  return (\n    <>\n      <h2>Authors</h2>\n      {/** - add course button to ManageCoursePage component */}\n      <Link to=\"/author\" className=\"btn btn-primary\">\n        Add Author\n      </Link>\n      {/** - call child component\n       *   - use props to pass courses array\n       *     from parent to child\n       *  (props are like html attributes for react components)\n       */}\n      <AuthorsList\n        authors={authors}\n        deleteAuthor={deleteAuthor}\n        getAuthorName={getAuthorName}\n      />\n    </>\n  );\n\n  // execute function when a course is added to the store\n  function onAuthorChange() {\n    // request authors from store and add/set to this component state\n    setAuthors(authorStore.getAuthors());\n  }\n}\n\nexport default AuthorsPage;\n"]},"metadata":{},"sourceType":"module"}